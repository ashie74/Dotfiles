#!/bin/sh

# Increment, decrement, or mute the volume and send a notification
# of the current volume level.

case $1 in
	up)
		# Set the volume on (if it was muted)
		wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
		wpctl set-volume -l 2.0 @DEFAULT_AUDIO_SINK@ 5%+
		;;
	down)
		wpctl set-mute @DEFAULT_AUDIO_SINK@ 0
		wpctl set-volume -l 2.0 @DEFAULT_AUDIO_SINK@ 5%-
		;;
	mute)
		wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
		;;
esac

VOLUME=$(echo $(wpctl get-volume @DEFAULT_AUDIO_SINK@ | tr -dc '0-9')| sed 's/^0*//')

if [ "$VOLUME" -lt 33 ]; then
	ICON="volume-low"
elif [ "$VOLUME" -lt 66 ]; then
	ICON="volume-medium"
else
	ICON="volume-high"
fi

case $1 in
	up)
		dunstify -a "Volume" -r 9993 -h int:value:"$VOLUME" -i $ICON "Volume" "Currently at ${VOLUME}%" -t 2000
		;;
	down)
		dunstify -a "Volume" -r 9993 -h int:value:"$VOLUME" -i $ICON "Volume" "Currently at ${VOLUME}%" -t 2000
		;;
	mute)
		if [[ "$(wpctl get-volume @DEFAULT_AUDIO_SINK@)" == *"MUTED"* ]]; then
			dunstify -a "Volume" -r 9993 -h int:value:"$VOLUME" -i "volume-mute" "Volume" "Currently muted" -t 2000
		else
			dunstify -a "Volume" -r 9993 -h int:value:"$VOLUME" -i $ICON "Volume" "Currently at ${VOLUME}%" -t 2000
		fi
		;;
esac
